import time

import pyttsx3 #pip install pyttsx3
import speech_recognition as sr #pip install speechRecognition
import datetime
import wikipedia #pip install wikipedia
import webbrowser
import os
import smtplib
import pyautogui
engine = pyttsx3.init('sapi5')
voices = engine.getProperty('voices')
engine.setProperty('voice', voices[0].id)


def speak(audio):
    engine.say(audio)
    engine.runAndWait()


def wishMe():
    hour = int(datetime.datetime.now().hour)
    if hour>=0 and hour<12:
        speak("Good Morning!, why you bitch disturbed me this morning ")

    elif hour>=12 and hour<18:
        speak("Good Afternoon!, why you bitch disturbed me this afternoon")

    else:
        speak("Good Evening!,don't you have any other work")

    speak("I am JARVIS, Boss Please tell me how may I replace alexa")
    #speak("I am JARVIS, why do you need an AI, are you this lazy , can't you do on your own , anyway now tell what should I do")

def takeCommand():
    #It takes microphone input from the user and returns string output

    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("tell me ass hole I am listening ")
        r.pause_threshold = 1
        audio = r.listen(source)

    try:
        print("Recognizing...")
        query = r.recognize_google(audio, language='en-in')
        print(f"User said: {query}\n")

    except Exception as e:
        # print(e)
        print("you piece of shit tell again properly...")
        speak("you piece of shit tell again properly...")
        return "None"
    return query

def sendEmail(to, content):
    server = smtplib.SMTP('smtp.gmail.com', 587)
    server.ehlo()
    server.starttls()
    server.login('youremail@gmail.com', 'your-password')
    server.sendmail('youremail@gmail.com', to, content)
    server.close()

if __name__ == "__main__":
    wishMe()
    x = True
    while x:
    # if 1:
        query = takeCommand().lower()

        # Logic for executing tasks based on query
        if 'wikipedia' in query:
            speak('Searching Wikipedia...')
            query = query.replace("wikipedia", "")
            results = wikipedia.summary(query, sentences=2)
            speak("According to Wikipedia")
            print(results)
            speak(results)

        elif 'open youtube' in query:
            webbrowser.open("youtube.com")
        elif 'krishna' in query:
            speak('He is my boss, he made me.')

        elif 'open google' in query:
            webbrowser.open("google.com")

        elif 'open instagram' in query:
            webbrowser.open("https://www.instagram.com/")


        elif 'music' in query:
            os.system('start spotify.exe && exit')
            time.sleep(10)


            pyautogui.press('space')

        elif 'outside' in query:
            speak('If you want you can. please dont ask me these qustions I am meant for something big like my boss')
        elif 'the time' in query:
            strTime = datetime.datetime.now().strftime("%H:%M:%S")
            speak(f"Sir, the time is {strTime}")

        elif 'open code' in query:
            #codePath = ""
            #os.startfile(codePath)
            speak("Do you know how to write code ?")

        elif 'email to vijay' in query:
            try:
                speak("What should I say?")
                content = takeCommand()
                to = "vijaytadepalli0202@gmail.com"
                sendEmail(to, content)
                speak("Email has been sent!")
            except Exception as e:
                print(e)
                speak("you jack ass, email is not been sent fuccck off")

        #elif 'stop' in query:
            #x = False
